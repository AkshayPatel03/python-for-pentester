""" from scapy.all import *

interface = "eth0"
ip_range = "10.10.187.128/24"
broadcastMac = "ff:ff:ff:ff:ff:ff"

packet = Ether(dst=broadcastMac)/ARP(pdst = ip_range) 

ans, unans = srp(packet, timeout =2, iface=interface, inter=0.1)

for send,receive in ans:
        print (receive.sprintf(r"%Ether.src% - %ARP.psrc%"))   """

from scapy.all import *

def arp_scan(interface, ip_range, timeout=2, inter=0.1):
    try:
        # Craft ARP request packet
        packet = Ether(dst="ff:ff:ff:ff:ff:ff") / ARP(pdst=ip_range)

        # Send and receive packets
        ans, _ = srp(packet, timeout=timeout, iface=interface, inter=inter)

        # Print results
        for send, receive in ans:
            print(f"MAC: {receive[Ether].src} - IP: {receive[ARP].psrc}")

    except Exception as e:
        print(f"An error occurred: {e}")

def main():
    interface = "eth0"
    ip_range = "10.10.187.128/24"

    print(f"Scanning IP range: {ip_range} on interface: {interface}")
    arp_scan(interface, ip_range)

if __name__ == "__main__":
    main()
